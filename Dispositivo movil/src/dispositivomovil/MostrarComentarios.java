/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dispositivomovil;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.xml.ws.WebServiceException;
import logica.ControladorBase;
import logica.ControladorDispositivo;
import logica.DataBaseComentario;

/**
 *
 * @author guillote
 */
public class MostrarComentarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form MostrarComentarios
     */
    private DefaultMutableTreeNode nodoPinchado = null;

    private JComponent Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
    private Dimension dimBarra = null;
    public void ocultarBarraTitulo(){
        Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
        dimBarra = Barra.getPreferredSize();
        Barra.setSize(0,0);
        Barra.setPreferredSize(new Dimension(0,0));
        repaint();
    }
    
    public MostrarComentarios() {
        initComponents();
        
        /****************** INICIALIZACION ARBOL COMENTARIOS *******************/

        DefaultTreeModel modelo = (DefaultTreeModel)arbol.getModel();
        DefaultMutableTreeNode cabeza = new DefaultMutableTreeNode (
        "<html><tt style=\"font-family:Arial\">Comentarios</tt></html>");
        modelo.setRoot(cabeza);
        arbol.setModel(modelo);
        arbol.setRowHeight(45);
        
        /******************** AGREGACION DE LOS COMENTARIOS ********************/
        List<DataBaseComentario> comments = new ArrayList<DataBaseComentario>();
        ControladorDispositivo c = ControladorDispositivo.getInstance();
        ControladorBase cb = ControladorBase.getInstance();
        try{            
            comments = c.consultarComentario("Simón");
        } catch (WebServiceException ex){                        
            comments = c.generarArbolComentarios(cb.cargarComentarios());
        }

        if (comments.isEmpty()){
                DefaultMutableTreeNode n1 = new DefaultMutableTreeNode ("El juego no posee comentarios");
                cabeza.add(n1);
            }
            else
                AgregarComentarios(cabeza, comments);
    }
    
    private void AgregarComentarios(DefaultMutableTreeNode nodo, List<DataBaseComentario> comments){

        Iterator it = comments.iterator();

        while(it.hasNext()){
            DataBaseComentario c = (DataBaseComentario) it.next();
            String f = c.getContenido().getFecha();
            String n = c.getContenido().getNick();
            String t = c.getContenido().getTexto();
            String id = c.getContenido().getId();
            int pu = c.getContenido().getPuntaje();
            String p = "";
            for (int i = 0; i<pu; i++){
                p = p + "★";
            }
            p = "<tt style=\"color: blue; font-size:13px\">" +p+"</tt>";
            String Com = "<html><font size=1 color=#BDBDBD >"+ id +"</font>["+ f + " - Por " + n + "] "+ p +"<br><b>" + t +"<b></html>";

            DefaultMutableTreeNode n1 = new DefaultMutableTreeNode (Com);
            nodo.add(n1);
            
            List<DataBaseComentario> resp = c.getRespuestas();
            AgregarComentarios(n1,resp);
        }
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new panel("/imagenes/Background.jpg");
        jScrollPane1 = new javax.swing.JScrollPane();
        arbol = new javax.swing.JTree();
        Cancelar = new javax.swing.JButton();
        Comentar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBorder(null);
        setName("Com"); // NOI18N
        setPreferredSize(new java.awt.Dimension(321, 480));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arbolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(arbol);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 297, 360));

        Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Botones/Cancelar.png"))); // NOI18N
        Cancelar.setBorderPainted(false);
        Cancelar.setContentAreaFilled(false);
        Cancelar.setFocusable(false);
        Cancelar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Botones/Cancelar_pressed.png"))); // NOI18N
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });
        jPanel1.add(Cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, 110, -1));

        Comentar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Botones/Comentar.png"))); // NOI18N
        Comentar.setBorderPainted(false);
        Comentar.setContentAreaFilled(false);
        Comentar.setFocusable(false);
        Comentar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Botones/Comentar_pressed.png"))); // NOI18N
        Comentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComentarActionPerformed(evt);
            }
        });
        jPanel1.add(Comentar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 110, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/info.png"))); // NOI18N
        jLabel1.setText("<html>Para escribir una respuesta a un comentario<br> haga click sobre él.</html>"); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 284, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        ControladorDispositivo c = ControladorDispositivo.getInstance();
        simon s = null;

        if (c.obtenerNickLogueado() == null){
             s = new simon();
        }else{
             s = new simon(true);
        }

        JDesktopPane Esc = this.getDesktopPane();
        Esc.add(s);
        s.setVisible(true);
        s.setLocation(39, 126);
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    private void ComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComentarActionPerformed
        ControladorDispositivo c = ControladorDispositivo.getInstance();

        /*********************************************************************/
        DefaultMutableTreeNode cabeza = (DefaultMutableTreeNode) arbol.getModel().getRoot();
            String id =  "";
            if ((nodoPinchado != null)&&(!nodoPinchado.equals(cabeza))){
                id = nodoPinchado.toString();
                id = id.substring(34);
                char[] ident = id.toCharArray();
                int i = 0;
                String idfinal = "";

                while (ident[i] != '<'){
                    idfinal = idfinal + ident[i];
                    i++;
                }
                id = idfinal;
            }

            c.setIdComentario(id); //seteo el id al controlador
        /*********************************************************************/

        if (c.obtenerNickLogueado()==null){
           int j = JOptionPane.showConfirmDialog(this, "Debe estar logueado para poder comentar\n     ¿Desea iniciar sesión?","ERROR",  2);

           if (j == JOptionPane.OK_OPTION){
                 Login l = new Login("com");
                 JDesktopPane Esc = this.getDesktopPane();
                 Esc.add(l);
                 l.show();
                 l.setLocation(39, 126);
                 this.dispose();
           }
        }
        else{           
            Comentar com = new Comentar();
            JDesktopPane Esc = this.getDesktopPane();
            Esc.add(com);
            com.show();
            com.setLocation(39, 126);
            this.dispose();
        }
    }//GEN-LAST:event_ComentarActionPerformed

    private void arbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbolMouseClicked
        TreePath p = arbol.getClosestPathForLocation(evt.getX(),evt.getY());
        nodoPinchado = (DefaultMutableTreeNode) p.getLastPathComponent();
    }//GEN-LAST:event_arbolMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Comentar;
    private javax.swing.JTree arbol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
