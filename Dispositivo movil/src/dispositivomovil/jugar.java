/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jugar.java
 *
 * Created on Nov 6, 2012, 7:32:36 PM
 */

package dispositivomovil;

import java.awt.Dimension;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.xml.ws.WebServiceException;
import logica.ControladorDispositivo;
import logica.Motor;

/**
 *
 * @author tprog126
 */
public class jugar extends javax.swing.JInternalFrame {
    
    public static boolean ignorarUsuario; //Para ignorarlo mientras se muestra la secuencia
    private Motor motor = new Motor();
    int indice = 0;
    private Thread delay = new Thread(){

        @Override
        public void run() {
            super.run();
            try {
                this.sleep(600);
                mostrarNuevaSecuencia();
                this.finalize();
            } catch (Throwable ex) {
                Logger.getLogger(jugar.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    };

    private JComponent Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
    private Dimension dimBarra = null;
    public void ocultarBarraTitulo(){
        Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
        dimBarra = Barra.getPreferredSize();
        Barra.setSize(0,0);
        Barra.setPreferredSize(new Dimension(0,0));
        repaint();
    }

    /** Creates new form jugar */
    public jugar() {
        initComponents();
        bloqueoUsuario.setVisible(false);
        delay.start();
        
    }

    public void mostrarNuevaSecuencia(){

        List<Integer> lst = motor.aumentarSecuencia();
        MostrarSecuencia hilo = new MostrarSecuencia(red, blue, green, yellow, bloqueoUsuario, lst);
        hilo.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new panel("/imagenes/Background.jpg");
        bloqueoUsuario = new javax.swing.JLabel();
        blue = new javax.swing.JButton();
        red = new javax.swing.JButton();
        green = new javax.swing.JButton();
        yellow = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        labelPuntaje = new javax.swing.JLabel();

        setBorder(null);
        setName("Jugar"); // NOI18N
        setPreferredSize(new java.awt.Dimension(321, 480));

        jPanel1.setMinimumSize(new java.awt.Dimension(320, 480));
        jPanel1.setPreferredSize(new java.awt.Dimension(321, 480));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bloqueoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bloqueoUsuarioMouseClicked(evt);
            }
        });
        jPanel1.add(bloqueoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 300, 310));

        blue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_blue.png"))); // NOI18N
        blue.setAlignmentY(0.0F);
        blue.setBorder(null);
        blue.setBorderPainted(false);
        blue.setContentAreaFilled(false);
        blue.setFocusable(false);
        blue.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_blue_sel.png"))); // NOI18N
        blue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueActionPerformed(evt);
            }
        });
        jPanel1.add(blue, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 234, -1, -1));

        red.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_red.png"))); // NOI18N
        red.setAlignmentY(0.0F);
        red.setBorderPainted(false);
        red.setContentAreaFilled(false);
        red.setFocusable(false);
        red.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_red_sel.png"))); // NOI18N
        red.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redActionPerformed(evt);
            }
        });
        jPanel1.add(red, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 83, -1, 140));

        green.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_grn.png"))); // NOI18N
        green.setAlignmentY(0.0F);
        green.setBorderPainted(false);
        green.setContentAreaFilled(false);
        green.setFocusable(false);
        green.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_grn_sel.png"))); // NOI18N
        green.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenActionPerformed(evt);
            }
        });
        jPanel1.add(green, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 82, -1, 140));

        yellow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_yw.png"))); // NOI18N
        yellow.setAlignmentY(0.0F);
        yellow.setBorderPainted(false);
        yellow.setContentAreaFilled(false);
        yellow.setFocusable(false);
        yellow.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bttn_yw_sel.png"))); // NOI18N
        yellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowActionPerformed(evt);
            }
        });
        jPanel1.add(yellow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/simonJuego.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusable(false);
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 320, 300));

        labelPuntaje.setFont(new java.awt.Font("Ubuntu", 0, 24));
        labelPuntaje.setText("Puntaje: 0");
        jPanel1.add(labelPuntaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void greenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenActionPerformed
        accionBoton(0);
    }//GEN-LAST:event_greenActionPerformed

    private void redActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redActionPerformed
        accionBoton(1);
    }//GEN-LAST:event_redActionPerformed

    private void blueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueActionPerformed
        accionBoton(2);
    }//GEN-LAST:event_blueActionPerformed

    private void yellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowActionPerformed
        accionBoton(3);
    }//GEN-LAST:event_yellowActionPerformed

    private void bloqueoUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloqueoUsuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bloqueoUsuarioMouseClicked

    private void accionBoton(int btn){
        ControladorDispositivo c = ControladorDispositivo.getInstance();
        if (!ignorarUsuario){

            if (!motor.comparar(indice, btn)){
                try{

                    indice = 0;                    
                    simon s = null;

                    if (c.obtenerNickLogueado() == null){
                        if (c.perteneceTopTen(1, motor.obtenerPuntaje())){
                            int confirm = JOptionPane.showConfirmDialog(this, "Puedes participar del ranking\n para ello debes loguearte\n          Â¿Deseas hacerlo?", "Fin del juego",1);
                            if (JOptionPane.OK_OPTION == confirm){
                                //SI SE LOGUEA CON CONEXION Y ENTRA EN TOPTEN
                                Login l = new Login("Juego");
                                JDesktopPane Esc = this.getDesktopPane();
                                Esc.add(l);
                                l.setVisible(true);
                                l.setLocation(39, 126);
                                this.dispose();
                                return;

                            }else{
                                //SI NO SE LOGUEA CON CONEXION Y ENTRA EN TOPTEN
                                s = new simon();
                            }


                        }else{
                            //SI NO ENTRA EN TOPTEN
                            JOptionPane.showMessageDialog(this,"Obtuviste "+
                                                  motor.obtenerPuntaje()+ " puntos.\n No fueron suficiente, intentalo nuevamente!", "Fin del juego", 1);
                            s = new simon();
                        }
                    }else{
                        if (c.perteneceTopTen(1, motor.obtenerPuntaje())){
                            //SI ESTA LOGUEADO Y ENTRA EN TOPTEN
                            c.agregarPuntajeTopTen(1, motor.obtenerPuntaje());
                            JOptionPane.showMessageDialog(this,"        Felicitaciones!\n    Obtuviste "+
                                                  motor.obtenerPuntaje()+ " puntos.\n Ahora formas parte del ranking.", "Fin del juego", 1);
                            Ranking rank = new Ranking();
                            JDesktopPane Esc = this.getDesktopPane();
                            Esc.add(rank);
                            rank.show();
                            rank.setLocation(39, 126);
                            this.dispose();
                            return;

                        }else{
                              //SI ESTA LOGUEADO Y NO ENTRA EN TOP TEN
                            JOptionPane.showMessageDialog(this,"Obtuviste "+
                                                  motor.obtenerPuntaje()+ " puntos.\n No fueron suficiente, intentalo nuevamente!", "Fin del juego", 1);
                            s = new simon(true);
                        }
                        
                    }

                    JDesktopPane Esc = this.getDesktopPane();
                    Esc.add(s);
                    s.setVisible(true);
                    s.setLocation(39, 126);
                    this.dispose();
                } catch (WebServiceException e){
                    if (c.obtenerNickLogueado() != null){
                        c.agregarPuntajeTopTen(1, motor.obtenerPuntaje());
                         JOptionPane.showMessageDialog(this,"Obtuviste "+
                                                  motor.obtenerPuntaje()+ " puntos.\n Se ingresarÃ¡ cuando recupere \n la conexiÃ³n", "No hay conexiÃ³n", 1);
                    }
                    else{
                    JOptionPane.showMessageDialog(this,"Obtuviste "+
                                                  motor.obtenerPuntaje()+ " puntos.\n No es posible guardar tu puntaje", "SesiÃ³n no iniciada", 1);
                    }
                    simon  s = new simon(true);
                    JDesktopPane Esc = this.getDesktopPane();
                    Esc.add(s);
                    s.setVisible(true);
                    s.setLocation(39, 126);
                    this.dispose();
                }
            }
            else
                if (motor.llegoAlFinal(indice)){

                    labelPuntaje.setText("Puntaje: "+(motor.obtenerPuntaje()+1));
                    delay = new Thread(){
                        @Override
                        public void run() {
                            super.run();
                            try {
                                this.sleep(600);
                                mostrarNuevaSecuencia();
                            } catch (Throwable ex) {
                                Logger.getLogger(jugar.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    };
                    delay.start();
                    
                    indice = 0;
                }
                else{                 
                  indice++;
                }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bloqueoUsuario;
    private javax.swing.JButton blue;
    private javax.swing.JButton green;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelPuntaje;
    private javax.swing.JButton red;
    private javax.swing.JButton yellow;
    // End of variables declaration//GEN-END:variables

}
